from django.db import models
import uuid
from datetime import datetime

# Create your models here.
class Product(models.Model):
    '''
        A model for products.

        Parameters:
        -----------
        id: Integer autogenerated.
        title: ChardField
        stock: Positive Integer
        created_at: DataTimeField auto_now_add:True
        price: FloatField
    '''
    title = models.CharField('Product', max_length=150)
    description = models.TextField('Description', max_length=400, blank=True)
    stock = models.PositiveSmallIntegerField(default=0)
    created_at = models.DateTimeField(auto_now_add=True)
    price = models.FloatField(default=0)
    is_active = models.BooleanField(default=True)
    new_enabled = models.BooleanField(default=True)

    def __str__(self):
        return f"{self.title}: {self.price}"
    
    def is_new(self):
        '''
            Check if the product is new.
        '''
        # Define a week to consider a product new
        TIME_TO_BE_NEW = 7*24*3600
        # Get the actual time
        t_now = datetime.now(tz=self.created_at.tzinfo)
        # Check the token time less than hour
        dt = t_now - self.created_at
        # Return True if the product is new and new_enable is True, otherwise False.
        return (dt.total_seconds() <= TIME_TO_BE_NEW) if self.new_enabled else False

    def available_stock(self):
        return self.stock > 0
class ProductImages(models.Model):

    '''
        A model for images of products.

        Parameters:
        -----------
        product: ForeignKey to Product Model.
        image: ImageField
        uploaded_at: DataTimeField auto_now_add:True

        Methods:
        -------
        The method save() is override to change the name of image file and 
        avoid maliciuos actions.
    '''

    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name='images')
    image = models.ImageField(upload_to="products/")
    uploaded_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.image.url}"
    
    def save(self, *args, **kwargs):
        '''
            Change the name of file to uuid.
        '''
        # Get the file extension
        extension = '.' + self.image.name.split('.')[-1]
        # Change the name of image
        self.image.name = '/'.join([str(self.product.id), str(uuid.uuid4().hex + extension)])
        super(ProductImages, self).save(*args, **kwargs)

#if request.method == 'POST':
#...
#...
#    for file in request.FILES.getlist('images'):
#        instance = Image(
#            condo=Condo.objects.get(your_parent_objects_id),
#            image=file
#        )
#        instance.save()
